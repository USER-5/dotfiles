set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" git repos on your local machine (i.e. when working on your own plugin)
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

Plugin 'preservim/nerdtree'
Plugin 'lervag/vimtex'
Plugin 'wikitopian/hardmode'
Plugin 'frazrepo/vim-rainbow'
Plugin 'itchyny/lightline.vim'
Plugin 'Valloric/YouCompleteMe'

" All of your Plugins must be added before the following line
call vundle#end()            " required
"filetype plugin on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2019 Jan 26
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings, bail
" out.
if v:progname =~? "evim"
  finish
endif

" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backupfile (restore to previous version)
  set backupdir=~/.vim/.backup
  if has('persistent_undo')
    set undofile	" keep an undo file (undo changes after closing)
	set undodir=~/.vim/.undo
  endif
endif
set swapfile
set directory=~/.vim/.swap

if &t_Co > 2 || has("gui_running")
  " Switch on highlighting the last used search pattern.
  set hlsearch
endif


"set up tab preferences
set tabstop=4
set noexpandtab
set autoindent
set shiftwidth=4
" leave hjkl keys active :)
let g:HardMode_level = 'wannabe'
" turn off python style recommendation (default changes tab indenting to 8-spaces)
let g:python_recommended_style = 0
:set number relativenumber
" highlight 80th column
highlight OverLength ctermbg=88
match OverLength /\%81v.\+/

" plugin settings
" vimlatex
let g:tex_flavor = 'latex'
" rainbowmode
let g:rainbow_active = 1
" lightline
set laststatus=2
set noshowmode
set noshowcmd
let g:lightline = {
			\ 'colorscheme' : 'wombat',
			\ }


" build and run commands on F8
autocmd filetype c nnoremap <leader>r :w <bar> exec '!./autorun'<CR>
autocmd filetype cpp nnoremap <leader>r :w <bar> exec '!./autorun'<CR>
autocmd filetype python nnoremap <leader>r :w <bar> exec '!python '.shellescape('%')<CR>
autocmd filetype tex highlight OverLength NONE

" Put these in an autocmd group, so that we can delete them easily.
augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78
augroup END

" Add optional packages.
"
" The matchit plugin makes the % command work better, but it is not backwards
" compatible.
" The ! means the package won't be loaded right away but when plugins are
" loaded during initialization.
if has('syntax') && has('eval')
  packadd! matchit
endif
map <silent> <C-n> :NERDTree<CR>
autocmd VimEnter,BufNewFile,BufReadPost * silent! call HardMode()

au VimEnter * silent! !xset r off
au VimLeave * silent! !xset r on

hi clear SpellBad
hi clear DiffChange
hi clear ErrorMsg
hi SpellBad ctermbg=9
hi Diffchange ctermbg=2
hi ErrorMsg cterm=bold guibg=Red ctermbg=1 guifg=Black ctermfg=235
hi Search cterm=underline ctermfg=Black
